name: dcc-camara

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend-tests:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ["3.10"]
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests on coverage
      run: |
        coverage run -m unittest discover -s Core/tests
    - name: Get Coverage Report
      run: |
        coverage json --omit=/usr/* 
    - uses: actions/upload-artifact@v3
      with:
        name: backend-coverage
        path: backend/coverage.json


  frontend-tests:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        node-version: [18.x]
    defaults:
      run:
        working-directory: ./frontend
    steps:
        node-version: ${{ matrix.os.node-version }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cypress install
        uses: cypress-io/github-action@v6
        with:
          # Disable running of tests within install job
          runTests: false
          build: npm run build

      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: build 

  cypress-run:
    runs-on: ubuntu-22.04
    needs: frontend-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          browser: chrome   
      # - uses: actions/checkout@v3
      # - name: Set up Node ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}
      # - name: Install Dependencies
      #   run: npm install
      # - name: Cypress run
      #   uses: cypress-io/github-action@v6
      #   with:
      #     build: npm run build
      #     start: npm start
      #     browser: chrome
      # - name: Generate Report
      #   run: npm cypress:run

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: frontend-coverage
      #     path: client/coverage/coverage-final.json
      #   env: 
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


  upload-to-codecov:
    needs: [backend-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3